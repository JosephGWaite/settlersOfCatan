Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var scale = 1;
   var yjump = 87 * scale;
   var yshift = yjump / 2;
   var xjump = 75 * scale;
   var tileSize = 47 * scale;
   var tile = F3(function (resource,
   pos,
   value) {
      return function () {
         switch (resource.ctor)
         {case "Desert":
            return $Graphics$Collage.move(pos)($Graphics$Collage.filled($Color.black)(A2($Graphics$Collage.ngon,
              6,
              45 * scale)));
            case "Rock":
            return $Graphics$Collage.move(pos)($Graphics$Collage.filled($Color.grey)(A2($Graphics$Collage.ngon,
              6,
              45 * scale)));
            case "Sheep":
            return $Graphics$Collage.move(pos)($Graphics$Collage.filled($Color.blue)(A2($Graphics$Collage.ngon,
              6,
              45 * scale)));
            case "Wheat":
            return $Graphics$Collage.move(pos)($Graphics$Collage.filled($Color.yellow)(A2($Graphics$Collage.ngon,
              6,
              45 * scale)));
            case "Wood":
            return $Graphics$Collage.move(pos)($Graphics$Collage.filled($Color.brown)(A2($Graphics$Collage.ngon,
              6,
              45 * scale)));}
         _U.badCase($moduleName,
         "between lines 8 and 18");
      }();
   });
   var Resource = F2(function (a,
   b) {
      return {ctor: "Resource"
             ,_0: a
             ,_1: b};
   });
   var Wood = {ctor: "Wood"};
   var Desert = {ctor: "Desert"};
   var Rock = {ctor: "Rock"};
   var Sheep = {ctor: "Sheep"};
   var Wheat = {ctor: "Wheat"};
   var main = A3($Graphics$Collage.collage,
   1000,
   1000,
   _L.fromArray([A3(tile,
                Wheat,
                {ctor: "_Tuple2",_0: 0,_1: 0},
                0)
                ,A3(tile,
                Sheep,
                {ctor: "_Tuple2"
                ,_0: 0
                ,_1: yjump},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: xjump
                ,_1: yshift},
                0)
                ,A3(tile,
                Desert,
                {ctor: "_Tuple2"
                ,_0: 0 - xjump
                ,_1: yshift},
                0)
                ,A3(tile,
                Wood,
                {ctor: "_Tuple2"
                ,_0: xjump
                ,_1: yshift + yjump},
                0)
                ,A3(tile,
                Wood,
                {ctor: "_Tuple2"
                ,_0: 0
                ,_1: yjump * 2},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: xjump * 2
                ,_1: yshift * -2},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: xjump
                ,_1: -2 * yjump + yshift},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: xjump
                ,_1: 0 - yshift},
                0)
                ,A3(tile,
                Wheat,
                {ctor: "_Tuple2"
                ,_0: 2 * xjump
                ,_1: 0},
                0)
                ,A3(tile,
                Wheat,
                {ctor: "_Tuple2"
                ,_0: 2 * xjump
                ,_1: yjump},
                0)
                ,A3(tile,
                Wheat,
                {ctor: "_Tuple2"
                ,_0: 0
                ,_1: 0 - yjump},
                0)
                ,A3(tile,
                Sheep,
                {ctor: "_Tuple2"
                ,_0: 0 - xjump
                ,_1: 0 - yshift},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: (0 - xjump) * 2
                ,_1: -2 * yshift},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: (0 - xjump) * 2
                ,_1: yjump},
                0)
                ,A3(tile,
                Sheep,
                {ctor: "_Tuple2"
                ,_0: 0 - xjump
                ,_1: -2 * yjump + yshift},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: (0 - xjump) * 2
                ,_1: 0},
                0)
                ,A3(tile,
                Rock,
                {ctor: "_Tuple2"
                ,_0: 0 - xjump
                ,_1: yshift + yjump},
                0)
                ,A3(tile,
                Desert,
                {ctor: "_Tuple2"
                ,_0: 0 - xjump
                ,_1: yshift},
                0)
                ,A3(tile,
                Wood,
                {ctor: "_Tuple2"
                ,_0: xjump
                ,_1: yshift + yjump},
                0)
                ,A3(tile,
                Wood,
                {ctor: "_Tuple2"
                ,_0: 0
                ,_1: (0 - yjump) * 2},
                0)]));
   _elm.Main.values = {_op: _op
                      ,Wheat: Wheat
                      ,Sheep: Sheep
                      ,Rock: Rock
                      ,Desert: Desert
                      ,Wood: Wood
                      ,Resource: Resource
                      ,tile: tile
                      ,scale: scale
                      ,yjump: yjump
                      ,yshift: yshift
                      ,xjump: xjump
                      ,tileSize: tileSize
                      ,main: main};
   return _elm.Main.values;
};